version: '2.2'
services:
  db:
    image: postgres:12.4
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
  frontend:
    image: zomin/infra_frontend
    volumes:
      - result_build:/app/result_build/build/
    depends_on:
      - backend
  nginx:
    image: nginx:1.19.3
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static_value:/static/
      - media_value:/media/
      - result_build:/usr/share/nginx/html/
      #- result_build:/usr/share/nginx/html/
      # - ./docs/redoc.html:/usr/share/nginx/html/api/docs/redoc.html
      # - ./docs/openapi-schema.yml:/usr/share/nginx/html/api/docs/openapi-schema.yml
      - ./docs/:/usr/share/nginx/html/api/docs/
    depends_on:
      - backend

  backend:
    image: zomin/backend
    restart: always
    depends_on:
      - db
    volumes:
      - static_value:/app/backend/staticfiles/
      - media_value:/app/backend/media/
    env_file:
    - ./.env
volumes:
  result_build:
  postgres_data:
  static_value:
  media_value:

# version: '3.3'
# services:

#   frontend:
#     build:
#       context: ../frontend
#       dockerfile: Dockerfile
#     volumes:
#       - ../frontend/:/app/result_build/
#   nginx:
#     image: nginx:1.19.6
#     ports:
#       - "80:80"
#     volumes:
#       - ./nginx.conf:/etc/nginx/conf.d/default.conf
#       - ../frontend/build:/usr/share/nginx/html/
#       - ../docs/:/usr/share/nginx/html/api/docs/
#     restart: always
#     depends_on:
#       - frontend